name: Continuous Integration

on: [pull_request]

jobs:
  format:
    name: Format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install black
        run: pip install -r dev/requirements.txt
      - name: Format
        run: isort duet --check && black duet --check
  mypy:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install mypy
        run: pip install -r dev/requirements.txt
      - name: Type check
        run: mypy duet
        env:
          PYTHONPATH: '.'
  lint:
    name: Lint check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Install pylint
        run: pip install -r dev/requirements.txt
      - name: Lint
        run: pylint duet
  import:
    name: Import check
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Import duet
        run: python -c "import duet"
  test-linux:
    name: Pytest Linux
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt -r dev/requirements.txt
      - name: Pytest check
        run: pytest duet
  test-windows:
    name: Pytest Windows
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt -r dev/requirements.txt
      - name: Pytest Windows
        run: pytest duet
  test-macos:
    name: Pytest MacOS
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt -r dev/requirements.txt
      - name: Pytest check
        run: pytest duet
